How did viewing a diff between two versions of a file help you see the bug that
was introduced?
A: I can quickly find the diffenrences between the two files where bug exists.


How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?
A: 当出现问题时，可以利用历史找到有问题的版本。
   拥有整个历史，可以迅速的找到写程序的逻辑脉络，找到每次修改的功能点，快速处理。

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?
A: pros: 每个commit目的明确，有助于以后的查找，处理
   cons: 但是如果没来及的commit时文件出错丢失了了，那就得重写了。。。


Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?
A: 取决于其主要用途， git 主要用来记录代码的版本，代码经常需要在多个文件间联系，而像google docs是用
来写文档的，关联性很低，文件间的联系很少。

How can you use the commands git log and git diff to view the history of files?
A: git log用来查看所有的commit
   git diff用来比较commit


How might using version control make you more confident to make changes that
could break something?
A: 由于可以通过git checkout回到之前的版本，所以可以没有顾虑的大胆修改代码，大不了checkout回去就好了

Now that you have your workspace set up, what do you want to try using Git for?

A: Everyday Project!